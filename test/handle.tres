[gd_resource type="VisualShader" load_steps=18 format=3 uid="uid://57h7cgf654ki"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_njkc4"]
size = Vector2(500, 200)
expression = "float quant = round(q);
output0  =5.0 * round(uv * quant) / quant;"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1tn4a"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_mvhme"]
parameter_name = "Noise"
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jmgp4"]
parameter_name = "quant2"
hint = 1
max = 1000.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_1nd6x"]
parameter_name = "dissolve"
hint = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_jrgte"]
size = Vector2(500, 300)
expression = "output0 = step(input0.r, 1.0 - threshold);"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_guo4i"]
size = Vector2(520, 360)
expression = "output0 = round(UV.xz * quant ) / (quant);"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_i2if8"]
size = Vector2(250, 150)
expression = "out = max(pow(dis, 3.0), 0.1);"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ugr7v"]
parameter_name = "Texture2DParameter"
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_7ffaj"]
parameter_name = "dissolve"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_qlotg"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_h5hrg"]
source = 5

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_lsso0"]
size = Vector2(500, 200)
expression = "float quant = round(q);
output0  = round(uv * quant) / quant;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xjw7i"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wp2hs"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_gi4f7"]
input_name = "normal"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ucjmw"]
size = Vector2(472, 240)
expression = "float quant = round(q);
col = (i2 * quant) / quant + (i1 * quant) / quant;"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform float dissolve : hint_range(0, 1);
uniform float quant2 : hint_range(0, 1000);
uniform sampler2D Texture2DParameter : filter_nearest, repeat_enable;
uniform sampler2D Noise : filter_nearest, repeat_enable;



void fragment() {
// Input:6
	vec2 n_out6p0 = UV;


// FloatParameter:14
	float n_out14p0 = quant2;


	vec2 n_out4p0;
// Expression:4
	n_out4p0 = vec2(0.0, 0.0);
	{
		float quant = round(n_out14p0);
		n_out4p0  = round(n_out6p0 * quant) / quant;
	}


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, n_out4p0);


// Input:8
	vec3 n_out8p0 = NORMAL;


	vec3 n_out9p0;
// Expression:9
	n_out9p0 = vec3(0.0, 0.0, 0.0);
	{
		float quant = round(n_out14p0);
		n_out9p0 = (n_out8p0 * quant) / quant + (vec3(n_out3p0.xyz) * quant) / quant;
	}


// Input:21
	vec3 n_out21p0 = VERTEX;


// ParameterRef:20
	float n_out20p0 = dissolve;


	float n_out18p0;
// Expression:18
	n_out18p0 = 0.0;
	{
		n_out18p0 = max(pow(n_out20p0, 3.0), 0.1);
	}


	vec2 n_out17p0;
// Expression:17
	n_out17p0 = vec2(0.0, 0.0);
	{
		n_out17p0 = round(n_out21p0.xz * n_out14p0 ) / (n_out14p0);
	}


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Noise, n_out17p0);


// FloatParameter:15
	float n_out15p0 = dissolve;


	float n_out16p0;
// Expression:16
	n_out16p0 = 0.0;
	{
		n_out16p0 = step(n_out11p0.r, 1.0 - n_out15p0);
	}


// VectorOp:7
	vec3 n_out7p0 = vec3(n_out3p0.xyz) * n_out8p0;


	vec3 n_out10p0;
// Expression:10
	n_out10p0 = vec3(0.0, 0.0, 0.0);
	{
		float quant = round(n_out14p0);
		n_out10p0  =5.0 * round(n_out7p0 * quant) / quant;
	}


// Output:0
	ALBEDO = n_out9p0;
	ALPHA = n_out16p0;
	EMISSION = n_out10p0;
	NORMAL_MAP = n_out10p0;


}
"
nodes/fragment/0/position = Vector2(1060, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_ugr7v")
nodes/fragment/2/position = Vector2(-560, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_h5hrg")
nodes/fragment/3/position = Vector2(20, 400)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_lsso0")
nodes/fragment/4/position = Vector2(-560, 600)
nodes/fragment/4/size = Vector2(500, 200)
nodes/fragment/4/input_ports = "0,3,uv;1,0,q;"
nodes/fragment/4/output_ports = "0,3,output0;"
nodes/fragment/4/expression = "float quant = round(q);
output0  = round(uv * quant) / quant;"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_xjw7i")
nodes/fragment/6/position = Vector2(-1020, 580)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_wp2hs")
nodes/fragment/7/position = Vector2(720, 420)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_gi4f7")
nodes/fragment/8/position = Vector2(140, 660)
nodes/fragment/9/node = SubResource("VisualShaderNodeExpression_ucjmw")
nodes/fragment/9/position = Vector2(360, 220)
nodes/fragment/9/size = Vector2(472, 240)
nodes/fragment/9/input_ports = "0,4,i1;1,4,i2;2,0,q;"
nodes/fragment/9/output_ports = "0,4,col;"
nodes/fragment/9/expression = "float quant = round(q);
col = (i2 * quant) / quant + (i1 * quant) / quant;"
nodes/fragment/10/node = SubResource("VisualShaderNodeExpression_njkc4")
nodes/fragment/10/position = Vector2(-160, 760)
nodes/fragment/10/size = Vector2(500, 200)
nodes/fragment/10/input_ports = "0,4,uv;1,0,q;"
nodes/fragment/10/output_ports = "0,4,output0;"
nodes/fragment/10/expression = "float quant = round(q);
output0  =5.0 * round(uv * quant) / quant;"
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_1tn4a")
nodes/fragment/11/position = Vector2(-320, 1240)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture2DParameter_mvhme")
nodes/fragment/12/position = Vector2(-1320, 1740)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatParameter_jmgp4")
nodes/fragment/14/position = Vector2(-1680, 700)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_1nd6x")
nodes/fragment/15/position = Vector2(-1320, 2140)
nodes/fragment/16/node = SubResource("VisualShaderNodeExpression_jrgte")
nodes/fragment/16/position = Vector2(-100, 1360)
nodes/fragment/16/size = Vector2(500, 300)
nodes/fragment/16/input_ports = "0,5,input0;1,0,threshold;2,4,input3;"
nodes/fragment/16/output_ports = "0,0,output0;"
nodes/fragment/16/expression = "output0 = step(input0.r, 1.0 - threshold);"
nodes/fragment/17/node = SubResource("VisualShaderNodeExpression_guo4i")
nodes/fragment/17/position = Vector2(-960, 1240)
nodes/fragment/17/size = Vector2(520, 360)
nodes/fragment/17/input_ports = "0,4,UV;1,0,quant;2,0,dissolve;"
nodes/fragment/17/output_ports = "0,3,output0;"
nodes/fragment/17/expression = "output0 = round(UV.xz * quant ) / (quant);"
nodes/fragment/18/node = SubResource("VisualShaderNodeExpression_i2if8")
nodes/fragment/18/position = Vector2(-1160, 1080)
nodes/fragment/18/size = Vector2(250, 150)
nodes/fragment/18/input_ports = "0,0,dis;"
nodes/fragment/18/output_ports = "0,0,out;"
nodes/fragment/18/expression = "out = max(pow(dis, 3.0), 0.1);"
nodes/fragment/20/node = SubResource("VisualShaderNodeParameterRef_7ffaj")
nodes/fragment/20/position = Vector2(-1400, 1220)
nodes/fragment/21/node = SubResource("VisualShaderNodeInput_qlotg")
nodes/fragment/21/position = Vector2(-1620, 1340)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 4, 0, 3, 0, 6, 0, 4, 0, 3, 0, 7, 0, 8, 0, 7, 1, 9, 0, 0, 0, 3, 0, 9, 0, 8, 0, 9, 1, 7, 0, 10, 0, 10, 0, 0, 9, 10, 0, 0, 5, 12, 0, 11, 2, 11, 0, 16, 0, 15, 0, 16, 1, 17, 0, 11, 0, 14, 0, 17, 1, 20, 0, 18, 0, 18, 0, 17, 2, 21, 0, 17, 0, 14, 0, 4, 1, 14, 0, 9, 2, 14, 0, 10, 1, 16, 0, 0, 1)
